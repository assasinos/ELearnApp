function CreateLesson(e,s,o){$.ajax({url:"/api/instructor/CourseEdit/CreateLesson",type:"PUT",data:{course_uid:o,lesson_content:e,lesson_name:s},success:function(e){prepareToast("CheckCircle.svg","Lesson Updated","The Lesson has been created successfully"),$("#Lessonuid").val(e);const o=$("#LessonSelect");o.prepend('<option value="'+e+'">'+s+"</option>"),o.val(e),$("#DeleteLessonBTN").toggleClass("disabled",!1)},error:function(e){prepareToast("xmark.svg","Error",e.responseJSON.errorMessage)}})}function UpdateLesson(){const e=$("#Lessonuid").val();if(""===e)return void prepareToast("xmark.svg","Error","Please select a lesson to update");const s=$("#LessonContent").val(),o=$("#LessonTitle").val();"New"!==e?$.ajax({url:"/api/instructor/CourseEdit/UpdateLesson",type:"PUT",data:{lesson_uid:e,course_uid:courseuid,lesson_content:s,lesson_name:o},success:function(e){prepareToast("CheckCircle.svg","Lesson Updated","The Lesson has been updated successfully")},error:function(e){prepareToast("xmark.svg","Error",e.responseJSON.errorMessage)}}):CreateLesson(s,o,courseuid)}function UpdateCourse(){const e=$("#CourseFrom").serialize();$.ajax({url:"/api/instructor/CourseEdit/UpdateCourse",type:"PUT",data:e,success:function(e){prepareToast("CheckCircle.svg","Course Updated","The Course has been updated successfully")},error:function(e){console.log(e),prepareToast("xmark.svg","Error",e.responseJSON.errorMessage)}})}const courseuid=$("#course_uid").val();$("#LessonSelect").change(function(){const e=$(this).val();if($("#Lessonuid").val(e),"New"===e)return $("#LessonContent").val(""),$("#LessonTitle").val(""),void $("#DeleteLessonBTN").toggleClass("disabled",!0);$("#DeleteLessonBTN").toggleClass("disabled",!1),$.ajax({url:"/api/Lesson/GetLessonData",type:"GET",data:{lessonuid:e,courseuid:courseuid},success:function(e){$("#LessonContent").val(e.lesson_content),$("#LessonTitle").val(e.lesson_name)}})});const modaldiv=$("#ConfirmModal"),modalbody=$(".modal-body");onsubmit=function(e){switch(e.preventDefault(),e.submitter.id){case"UpdateLessonBTN":UpdateLesson();break;case"UpdateCourseBTN":UpdateCourse()}},$("#DeleteCourseBTN").click(e=>{modalbody.html("<p>Are you sure you want to delete this course?</p><p>Deleting a course will delete all lessons and all the data related to this course</p>"),modaldiv.modal("show"),$("#ConfirmButton").one("click",()=>{$.ajax({url:"/api/instructor/CourseEdit/DeleteCourse",type:"DELETE",data:{course_uid:courseuid},success:function(e){window.location.href="/Instructor/Courses"},error:function(e){prepareToast("xmark.svg","Error",e.responseJSON.errorMessage)}}),modaldiv.modal("hide")})}),$("#DeleteLessonBTN").click(e=>{modalbody.html("<p>Are you sure you want to delete this lesson?</p>"),modaldiv.modal("show");let s=$("#Lessonuid").val();""!==s&&"New"!==s?$("#ConfirmButton").one("click",()=>{s=$("#Lessonuid").val(),$.ajax({url:"/api/instructor/CourseEdit/DeleteLesson",type:"DELETE",data:{lesson_uid:s,course_uid:courseuid},success:function(e){prepareToast("CheckCircle.svg","Lesson Updated","The Lesson has been Deleted successfully");const o=$("#LessonSelect");o.find(`option[value='${s}']`).remove(),o.val("New"),o.trigger("change")},error:function(e){prepareToast("xmark.svg","Error",e.responseJSON.errorMessage)}}),modaldiv.modal("hide")}):prepareToast("xmark.svg","Error","Please select a lesson to delete")});